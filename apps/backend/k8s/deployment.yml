apiVersion: apps/v1
kind: Deployment
metadata:
  name: iagent-backend
  labels:
    app: iagent-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: iagent-backend
  template:
    metadata:
      labels:
        app: iagent-backend
    spec:
      containers:
      - name: iagent-backend
        image: 045498639212.dkr.ecr.eu-central-1.amazonaws.com/iagent-backend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: iagent-backend-service
spec:
  selector:
    app: iagent-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: iagent-backend-ingress
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
spec:
  rules:
  - http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: iagent-backend-service
            port:
              number: 80
