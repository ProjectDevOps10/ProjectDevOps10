# ESSENTIAL: Frontend CI/CD - Builds and deploys the frontend application
# This workflow is required for basic project operation
# It handles building, testing, and deploying the frontend to GitHub Pages
name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  AWS_REGION: eu-central-1  # Frankfurt - closest to Israel

jobs:
  # Build and Test Frontend
  build-and-test:
    name: 🧪 Build and Test Frontend
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 Cache Nx computation cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-frontend-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            nx-frontend-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-
            nx-frontend-${{ runner.os }}-

      - name: 🧹 Run ESLint
        run: npx nx lint frontend --format=stylish

      - name: 🧪 Run Tests
        run: npx nx test frontend --coverage

      - name: 🏗️ Build Frontend
        run: npx nx build frontend --configuration=production

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: dist/apps/frontend
          retention-days: 7

  # Deploy to GitHub Pages
  deploy-to-github-pages:
    name: 🚀 Deploy to GitHub Pages
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 10
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 Cache Nx computation cache
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-frontend-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
          restore-keys: |
            nx-frontend-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-
            nx-frontend-${{ runner.os }}-

      - name: 🏗️ Build Frontend for Production
        run: npx nx build frontend --configuration=production

      - name: 🔧 Setup Pages
        uses: actions/configure-pages@v4

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/apps/frontend'

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 📢 Deployment Status
        run: |
          echo "✅ Frontend deployed successfully!"
          echo "🌐 URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "🏷️ Branch: ${{ github.ref_name }}"

  # Security Scan
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'apps/frontend'
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'

      - name: 📤 Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-frontend-results.sarif' 