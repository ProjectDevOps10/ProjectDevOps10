name: 🛠️ Setup & Configuration

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Setup action'
        required: true
        default: 'setup-ecr'
        type: choice
        options:
          - setup-ecr
          - setup-github-pages
          - check-aws
          - setup-infrastructure

env:
  AWS_REGION: eu-central-1
  CLUSTER_NAME: iagent-cluster

jobs:
  setup:
    name: 🛠️ Setup Operations
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: 🐳 Setup ECR Repositories
      if: github.event.inputs.action == 'setup-ecr'
      run: |
        echo "🐳 Setting up ECR repositories..."
        
        # Create backend repository
        aws ecr create-repository --repository-name iagent-backend --region ${{ env.AWS_REGION }} || echo "Backend repository already exists"
        
        # Create frontend repository
        aws ecr create-repository --repository-name iagent-frontend --region ${{ env.AWS_REGION }} || echo "Frontend repository already exists"
        
        # List repositories
        echo "📋 ECR repositories:"
        aws ecr describe-repositories --region ${{ env.AWS_REGION }} --query 'repositories[].repositoryName' --output table
        
        echo "✅ ECR setup completed!"
        
    - name: 🌐 Setup GitHub Pages
      if: github.event.inputs.action == 'setup-github-pages'
      run: |
        echo "🌐 GitHub Pages Setup Instructions:"
        echo ""
        echo "📋 Manual Steps Required:"
        echo "1. Go to repository Settings → Pages"
        echo "2. Set Source to 'GitHub Actions'"
        echo "3. Save the configuration"
        echo ""
        echo "🔗 Repository URL: https://github.com/ProjectDevOps10/iAgent"
        echo "📄 Settings URL: https://github.com/ProjectDevOps10/iAgent/settings/pages"
        echo ""
        echo "✅ After setup, frontend deployments will work automatically!"
        
    - name: 🔍 Check AWS Status
      if: github.event.inputs.action == 'check-aws'
      run: |
        echo "🔍 Checking AWS status..."
        
        # Check AWS account
        echo "📊 AWS Account:"
        aws sts get-caller-identity
        
        # Check ECR repositories
        echo "🐳 ECR Repositories:"
        aws ecr describe-repositories --region ${{ env.AWS_REGION }} --query 'repositories[].{Name:repositoryName,URI:repositoryUri}' --output table
        
        # Check EKS clusters
        echo "🏗️ EKS Clusters:"
        aws eks list-clusters --region ${{ env.AWS_REGION }} || echo "No EKS clusters found"
        
        echo "✅ AWS status check completed!"
        
    - name: 🏗️ Setup Infrastructure
      if: github.event.inputs.action == 'setup-infrastructure'
      run: |
        echo "🏗️ Setting up infrastructure..."
        
        # Check if infrastructure exists
        if aws cloudformation describe-stacks --stack-name IAgentInfrastructureStack --region ${{ env.AWS_REGION }} 2>/dev/null; then
          echo "✅ Infrastructure already exists"
          aws cloudformation describe-stacks --stack-name IAgentInfrastructureStack --region ${{ env.AWS_REGION }} --query 'Stacks[0].{Status:StackStatus,Outputs:Outputs}' --output table
        else
          echo "📋 Infrastructure not found. Run the infrastructure workflow to deploy."
        fi
        
    - name: 📋 Setup Summary
      run: |
        echo "📋 Setup Summary:"
        echo "🎯 Action performed: ${{ github.event.inputs.action }}"
        echo "🌍 AWS Region: ${{ env.AWS_REGION }}"
        echo "🏗️ Cluster: ${{ env.CLUSTER_NAME }}"
        echo ""
        echo "📋 Next Steps:"
        echo "1. Ensure GitHub Pages is enabled (if using frontend deployment)"
        echo "2. Run infrastructure deployment workflow"
        echo "3. Push to main branch to trigger full CI/CD pipeline"
